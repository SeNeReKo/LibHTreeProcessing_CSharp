using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;


using LibHTreeProcessing.src.simplexml;


namespace LibHTreeProcessing.src.treesearch
{

	public class HPath : AbstractPathStack<HAbstractElement>
	{

		////////////////////////////////////////////////////////////////
		// Constants
		////////////////////////////////////////////////////////////////

		////////////////////////////////////////////////////////////////
		// Variables
		////////////////////////////////////////////////////////////////

		////////////////////////////////////////////////////////////////
		// Constructors
		////////////////////////////////////////////////////////////////

		public HPath()
			: base()
		{
		}

		public HPath(int initialCapacity)
			: base(initialCapacity)
		{
		}

		public HPath(HAbstractElement element)
			: base(element)
		{
		}

		private HPath(HAbstractElement[] copyFromThis, int count)
			: base(copyFromThis, count)
		{
		}

		////////////////////////////////////////////////////////////////
		// Properties
		////////////////////////////////////////////////////////////////

		////////////////////////////////////////////////////////////////
		// Methods
		////////////////////////////////////////////////////////////////

		protected override void ItemToString(HAbstractElement item, StringBuilder sb)
		{
			sb.Append(item.ToString());
		}

		public static HPath Clone(HPath p)
		{
			return new HPath(p.items, p.count);
		}

	}

}
